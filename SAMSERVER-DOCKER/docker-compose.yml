services:
  # MongoDB Database
  samserver-mongodb:
    image: mongo:6.0
    container_name: samserver-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ThaiAocV21@
      MONGO_INITDB_DATABASE: aoc_v2
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - samserver-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  samserver-redis:
    image: redis:7-alpine
    container_name: samserver-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass aocv2@123!
    volumes:
      - redis_data:/data
    networks:
      - samserver-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Server
  samserver-api:
    build:
      context: ../API-SERVER-BACKUP/backend
      dockerfile: ../../SAMSERVER-DOCKER/Dockerfile.api
    container_name: samserver-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      MONGODB_LIVE_URL: mongodb://admin:ThaiAocV21%40@samserver-mongodb:27017/aoc_v2?authSource=admin
      LIVE_REDIS_HOST: samserver-redis
      LIVE_REDIS_PORT: 6379
      LIVE_REDIS_PASSWORD: aocv2@123!
      SOCKET_SERVER_PORT: 5055
      GOOGLE_MAP_KEY: AIzaSyAWILNiGlWIeNXIdpdDyYYyT1GmdlSgT1k
      FCM_SERVER_KEY: AAAA8uxbopM:APA91bFF8t6ItmNKC6QD9FlWgWKpKLYHFA5tpwiq3MxbcpmMMx14PnFTDDzhlxmbzzdniLTya6k6El_bvnGftpZ3Q3dDpA_g2EEpfnb_VF2uMeqlhvLESrKNdvhWgpb9Wm14GvsPngZy
      ALIVE_SERVER_KEY: AAAAL7j0cUU:APA91bFP9vzJtREBNeeXN52BC7jEn8G3SBG2NiIpyd97nsIO9vpfSk7xWb0XoatY5k_5rx8Ei4D0lVGsqvUuYQVyD1d7Rdi-tJawD3mU3KzGVdgMCCJ117Lt-EeAA5Bgvtro1ZwSWWbi
    volumes:
      - ./logs/api:/app/logs
      - ./ambulance_images:/app/public/uploads/ambulance_images
    depends_on:
      samserver-mongodb:
        condition: service_healthy
      samserver-redis:
        condition: service_healthy
    networks:
      - samserver-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # WebSocket Server
  samserver-websocket:
    build:
      context: ../API-SERVER-BACKUP/backend
      dockerfile: ../../SAMSERVER-DOCKER/Dockerfile.websocket
    container_name: samserver-websocket
    restart: unless-stopped
    ports:
      - "5055:5055"
    environment:
      NODE_ENV: production
      MONGODB_LIVE_URL: mongodb://admin:ThaiAocV21%40@samserver-mongodb:27017/aoc_v2?authSource=admin
      LIVE_REDIS_HOST: samserver-redis
      LIVE_REDIS_PORT: 6379
      LIVE_REDIS_PASSWORD: aocv2@123!
      SOCKET_SERVER_PORT: 5055
    volumes:
      - ./logs/websocket:/app/logs
    depends_on:
      samserver-mongodb:
        condition: service_healthy
      samserver-redis:
        condition: service_healthy
    networks:
      - samserver-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5055/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  samserver-nginx:
    image: nginx:alpine
    container_name: samserver-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-config/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx-config/api.conf:/etc/nginx/conf.d/api.conf
      - ./nginx-config/websocket.conf:/etc/nginx/conf.d/websocket.conf
      - ./nginx-config/images.conf:/etc/nginx/conf.d/images.conf
      - ./ambulance_images:/var/www/ambulance_images
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - samserver-api
      - samserver-websocket
    networks:
      - samserver-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitor Socket Server
  samserver-monitor:
    build:
      context: ../API-SERVER-BACKUP/monitorsocketserver-master
      dockerfile: ../../SAMSERVER-DOCKER/Dockerfile.monitor
    container_name: samserver-monitor
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      MONGODB_LIVE_URL: mongodb://admin:ThaiAocV21%40@samserver-mongodb:27017/aoc_v2?authSource=admin
      LIVE_REDIS_HOST: samserver-redis
      LIVE_REDIS_PORT: 6379
      LIVE_REDIS_PASSWORD: aocv2@123!
    volumes:
      - ./logs/monitor:/app/logs
    depends_on:
      samserver-mongodb:
        condition: service_healthy
      samserver-redis:
        condition: service_healthy
    networks:
      - samserver-network

  # P1 Socket Server
  samserver-p1:
    build:
      context: ../API-SERVER-BACKUP/p1_socket_server
      dockerfile: ../../SAMSERVER-DOCKER/Dockerfile.p1
    container_name: samserver-p1
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: production
      MONGODB_LIVE_URL: mongodb://admin:ThaiAocV21%40@samserver-mongodb:27017/aoc_v2?authSource=admin
      LIVE_REDIS_HOST: samserver-redis
      LIVE_REDIS_PORT: 6379
      LIVE_REDIS_PASSWORD: aocv2@123!
    volumes:
      - ./logs/p1:/app/logs
    depends_on:
      samserver-mongodb:
        condition: service_healthy
      samserver-redis:
        condition: service_healthy
    networks:
      - samserver-network

  # Prometheus Monitoring
  samserver-monitoring:
    image: prom/prometheus:latest
    container_name: samserver-monitoring
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./scripts/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - samserver-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  samserver-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16